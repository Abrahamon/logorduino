
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'DC287A1FAACB9E6CC92616F7F0992667'
    
_lr_action_items = {'PARA':([0,2,6,11,12,17,18,20,21,22,35,40,41,42,43,47,],[1,-21,-20,1,-22,1,1,1,1,1,1,-23,-19,-18,1,1,]),'NUMBER':([0,2,3,4,6,7,8,10,11,12,14,17,18,20,21,22,24,26,27,29,30,31,32,35,40,41,42,43,44,47,],[2,-21,2,2,-20,2,2,2,2,-22,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-23,-19,-18,2,2,2,]),'LBRACKET':([2,6,12,15,28,40,41,42,],[-21,-20,-22,29,43,-23,-19,-18,]),'AVANZA':([0,2,6,11,12,17,18,20,21,22,35,40,41,42,43,47,],[3,-21,-20,3,-22,3,3,3,3,3,3,-23,-19,-18,3,3,]),'MINUS':([0,2,6,9,10,11,12,13,16,17,18,20,21,22,23,25,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,52,53,54,55,],[-14,-21,-20,-13,24,-14,-22,-17,31,-14,-14,-14,-14,-14,-12,31,31,31,-14,31,31,31,-11,-23,-19,-18,-14,-15,-16,-14,-3,31,31,31,-9,-10,-2,]),'GIRAIZQUIERDA':([0,2,6,11,12,17,18,20,21,22,35,40,41,42,43,47,],[4,-21,-20,4,-22,4,4,4,4,4,4,-23,-19,-18,4,4,]),'RPAREN':([2,6,9,11,12,13,18,20,21,22,23,25,34,35,36,37,38,39,40,41,42,45,46,48,49,53,54,55,],[-21,-20,-13,-14,-22,-17,-14,-14,-14,-14,-12,40,-5,-14,-8,-6,-7,-11,-23,-19,-18,-15,-16,-3,-4,-9,-10,-2,]),'PLUS':([0,2,6,9,11,12,13,16,17,18,20,21,22,23,25,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,52,53,54,55,],[-14,-21,-20,-13,-14,-22,-17,30,-14,-14,-14,-14,-14,-12,30,30,30,-14,30,30,30,-11,-23,-19,-18,-14,-15,-16,-14,-3,30,30,30,-9,-10,-2,]),'RETROCEDE':([0,2,6,11,12,17,18,20,21,22,35,40,41,42,43,47,],[7,-21,-20,7,-22,7,7,7,7,7,7,-23,-19,-18,7,7,]),'$end':([0,2,5,6,9,12,13,16,18,20,21,22,23,34,35,36,37,38,39,40,41,42,45,46,48,49,53,54,55,],[-14,-21,0,-20,-13,-22,-17,-1,-14,-14,-14,-14,-12,-5,-14,-8,-6,-7,-11,-23,-19,-18,-15,-16,-3,-4,-9,-10,-2,]),'DIVIDE':([2,6,12,13,18,20,21,22,23,28,39,40,41,42,44,45,46,47,51,],[-21,-20,-22,26,26,26,26,26,26,26,26,-23,-19,-18,26,26,26,26,26,]),'GIRADERECHA':([0,2,6,11,12,17,18,20,21,22,35,40,41,42,43,47,],[8,-21,-20,8,-22,8,8,8,8,8,8,-23,-19,-18,8,8,]),'CENTRO':([0,2,6,11,12,17,18,20,21,22,35,40,41,42,43,47,],[9,-21,-20,9,-22,9,9,9,9,9,9,-23,-19,-18,9,9,]),'TIMES':([2,6,12,13,18,20,21,22,23,28,39,40,41,42,44,45,46,47,51,],[-21,-20,-22,27,27,27,27,27,27,27,27,-23,-19,-18,27,27,27,27,27,]),'PONRUMBO':([0,2,6,11,12,17,18,20,21,22,35,40,41,42,43,47,],[10,-21,-20,10,-22,10,10,10,10,10,10,-23,-19,-18,10,10,]),'LPAREN':([0,2,3,4,6,7,8,10,11,12,14,17,18,20,21,22,24,26,27,29,30,31,32,35,40,41,42,43,44,47,],[11,-21,11,11,-20,11,11,11,11,-22,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-23,-19,-18,11,11,11,]),'FIN':([2,6,9,12,13,17,18,20,21,22,23,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,52,53,54,55,],[-21,-20,-13,-22,-17,-14,-14,-14,-14,-14,-12,48,-5,-14,-8,-6,-7,-11,-23,-19,-18,-15,-16,-14,-3,-4,55,-9,-10,-2,]),'ID':([0,1,2,3,4,6,7,8,10,11,12,14,17,18,19,20,21,22,24,26,27,29,30,31,32,35,40,41,42,43,44,47,],[12,17,-21,12,12,-20,12,12,12,12,-22,12,12,12,35,12,12,12,12,12,12,12,12,12,12,12,-23,-19,-18,12,12,12,]),'REPITE':([0,2,6,11,12,17,18,20,21,22,35,40,41,42,43,47,],[14,-21,-20,14,-22,14,14,14,14,14,14,-23,-19,-18,14,14,]),'PONPOS':([0,2,6,11,12,17,18,20,21,22,35,40,41,42,43,47,],[15,-21,-20,15,-22,15,15,15,15,15,15,-23,-19,-18,15,15,]),'DOUPOINT':([3,17,],[19,32,]),'RBRACKET':([2,6,9,12,13,18,20,21,22,23,34,35,36,37,38,39,40,41,42,43,45,46,48,49,50,51,53,54,55,],[-21,-20,-13,-22,-17,-14,-14,-14,-14,-12,-5,-14,-8,-6,-7,-11,-23,-19,-18,-14,-15,-16,-3,-4,53,54,-9,-10,-2,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'term':([0,3,4,7,8,10,11,14,17,18,20,21,22,24,29,30,31,32,35,43,44,47,],[13,18,20,21,22,23,13,28,13,13,13,13,13,39,44,45,46,47,13,13,51,13,]),'program':([0,],[5,]),'expression':([0,11,17,18,20,21,22,35,43,47,],[16,25,33,34,36,37,38,49,50,52,]),'factor':([0,3,4,7,8,10,11,14,17,18,20,21,22,24,26,27,29,30,31,32,35,43,44,47,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,41,42,6,6,6,6,6,6,6,6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> expression','program',1,'p_program','logorduino_parser.py',15),
  ('expression -> PARA ID DOUPOINT term expression FIN','expression',6,'p_expression_PARA_1','logorduino_parser.py',20),
  ('expression -> PARA ID expression FIN','expression',4,'p_expression_PARA_2','logorduino_parser.py',26),
  ('expression -> AVANZA DOUPOINT ID expression','expression',4,'p_expression_AVANZA_1','logorduino_parser.py',31),
  ('expression -> AVANZA term expression','expression',3,'p_expression_AVANZA_2','logorduino_parser.py',38),
  ('expression -> RETROCEDE term expression','expression',3,'p_expression_RETROCEDE','logorduino_parser.py',45),
  ('expression -> GIRADERECHA term expression','expression',3,'p_expression_GIRADERECHA','logorduino_parser.py',50),
  ('expression -> GIRAIZQUIERDA term expression','expression',3,'p_expression_GIRAIZQUIERDA','logorduino_parser.py',54),
  ('expression -> REPITE term LBRACKET expression RBRACKET','expression',5,'p_expression_REPITE','logorduino_parser.py',59),
  ('expression -> PONPOS LBRACKET term term RBRACKET','expression',5,'p_expression_PONPOS','logorduino_parser.py',63),
  ('expression -> PONRUMBO MINUS term','expression',3,'p_expression_PONRUMBO','logorduino_parser.py',68),
  ('expression -> PONRUMBO term','expression',2,'p_expression_PONRUMBO','logorduino_parser.py',69),
  ('expression -> CENTRO','expression',1,'p_expression_CENTRO','logorduino_parser.py',76),
  ('expression -> <empty>','expression',0,'p_expression_empty','logorduino_parser.py',81),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','logorduino_parser.py',85),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','logorduino_parser.py',89),
  ('expression -> term','expression',1,'p_expression_term','logorduino_parser.py',93),
  ('term -> term TIMES factor','term',3,'p_term_times','logorduino_parser.py',97),
  ('term -> term DIVIDE factor','term',3,'p_term_div','logorduino_parser.py',101),
  ('term -> factor','term',1,'p_term_factor','logorduino_parser.py',105),
  ('factor -> NUMBER','factor',1,'p_factor_num','logorduino_parser.py',109),
  ('factor -> ID','factor',1,'p_factor_id','logorduino_parser.py',113),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','logorduino_parser.py',117),
]
